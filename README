AIR Pump - Version 0.1a - 04.04.12
AIR Pump is a JSFL command for Flash Professional IDE that allows for custom AIR adt.jar command line arguments and execution of adt.jar of any version of the AIR SDK to be leveraged directly from the Flash IDE. Thus providing access to AIR adt.jar commands, features and functionality normally only available from the command line and not from within the IDE itself.
It is designed to be an aid to workflow and efficiency when working with Flash Professional and AIR, and to assist in automating repetitive, and error prone processes.

So far development has focused on Mac version - need to go back through and make sure it all works on PC.
Read through the code itself for some hints to usage, and ways you might modify/tailor to your needs.
This is the first iteration - please be kind! :)

UPDATE 04.06.12:
Added extra drop downs for AIR 3.3beta iOS simulator target (woot!)
Added preliminary image mockup of the custom SWF Panel that will eventually contain all this functionality in one much easier to use dialog, with preferences, etc.

To install, place in your "Commands" folder with other .jsfl files. Restart Flash and now you should have a "AIR Pump" option in the commands drop down.
Currently there is no error checking, and I haven't done a lot of testing with multiple .fla files open.

TODO:
1. Put in place code to make everything work properly across platforms - currently geared at Mac only (platformsdk option for iOS not really viable on Win yet)
2. Additional options and streamlinging of selection process/config/preferences/etc.
3. Replace all the XUL Dialogs with a custom SWF for a single panel that replicates all the standard AIR Publish Settings dialog plus the existing functionality of AIR Pump and additional planned features.
4. Integrate custom adt.jar shim and other functionality from other related project: http://www.impossibilities.com/v4/2011/06/24/leverage-air-2-7-ipa-test-interpreter-target-mode-for-ios-in-flash-cs-5-5/ 
5. Package up in a proper .mxp file for easier installation.
6. Finish TODO list with other thoughts and ideas.

Any comments, thoughts, suggestions, please open an issue and fire away!
